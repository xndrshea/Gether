{"map":"{\"version\":3,\"sources\":[\"/Users/alexandershea/Documents/Gether/Gether/src/services/walletService.js\",\"/Users/alexandershea/Documents/Gether/Gether/src/components/WalletConnectButton.js\",\"/Users/alexandershea/Documents/Gether/Gether/src/App.js\",\"/Users/alexandershea/Documents/Gether/Gether/src/index.js\"],\"names\":[\"connector\",\"TonConnect\",\"WalletConnectButton\",\"isConnected\",\"setIsConnected\",\"useState\",\"useEffect\",\"callback\",\"onStatusChange\",\"wallet\",\"React\",\"createElement\",\"onClick\",\"handleDisconnect\",\"disconnect\",\"console\",\"log\",\"async\",\"walletConnectionSource\",\"universalLink\",\"bridgeUrl\",\"connect\",\"account\",\"address\",\"error\",\"connectWallet\",\"App\",\"ReactDOM\",\"render\",\"StrictMode\",\"document\",\"getElementById\"],\"mappings\":\"yJAGA,MAAMA,EAAY,SAAIC,GC6BPC,IAAAA,EA1BaA,KACxB,MAAOC,EAAaC,GAAkBC,OAAAA,EAAAA,SAAAA,EAAS,GAE/CC,OAAAA,EAAAA,UAAAA,CAAU,KDgBiBC,CAAAA,IAC3BP,EAAUQ,eAAeD,ICfrBC,CAAgBC,IACZL,IAAiBK,MAEtB,IAWH,OACIC,EAAAA,EAAAC,cAAA,SAAA,CAAQC,QAAST,EANIU,KDCzBb,EAAUc,aACVC,QAAQC,IAAI,uBCARZ,GAAe,IANGa,eDXGA,WACzB,MAAMC,EAAyB,CAC3BC,cAAe,wCACfC,UAAW,mCAGf,IACI,MAAMX,QAAeT,EAAUqB,QAAQH,GAEvC,OADAH,QAAQC,IAAI,oBAAqBP,EAAOa,QAAQC,SACzCd,EACT,MAAOe,GACLT,QAAQS,MAAM,4BAA6BA,KCCrCC,KAUDtB,EAAc,oBAAsB,mBCZlCuB,IAAAA,EAVHA,IAEJhB,EAAAA,EAAAC,cAAA,MAAA,KACID,EAAAA,EAAAC,cAAA,KAAA,KAAI,4BACJD,EAAAA,EAAAC,cAACT,EAAmB,aCDhCyB,EAAAA,EAASC,OACLlB,EAAAA,EAAAC,cAACD,EAAAA,EAAMmB,WAAU,KACbnB,EAAAA,EAAAC,cAACe,EAAG,MAAG,MAEXI,SAASC,eAAe\",\"sourcesContent\":[\"import TonConnect from '@tonconnect/sdk';\\nimport Base64 from '@tonconnect/sdk';\\n\\nconst connector = new TonConnect();\\n\\nexport const connectWallet = async () => {\\n    const walletConnectionSource = {\\n        universalLink: 'https://app.tonkeeper.com/ton-connect',\\n        bridgeUrl: 'https://bridge.tonapi.io/bridge'\\n    };\\n\\n    try {\\n        const wallet = await connector.connect(walletConnectionSource);\\n        console.log('Wallet connected:', wallet.account.address);\\n        return wallet;\\n    } catch (error) {\\n        console.error('Failed to connect wallet:', error);\\n    }\\n};\\n\\nexport const disconnectWallet = () => {\\n    connector.disconnect();\\n    console.log('Wallet disconnected');\\n};\\n\\nexport const onStatusChange = (callback) => {\\n    connector.onStatusChange(callback);\\n};\",\"// src/components/WalletConnectButton.js\\n\\nimport React, { useEffect, useState } from 'react';\\nimport { connectWallet, disconnectWallet, onStatusChange } from '../services/walletService';\\nimport Base64 from '@tonconnect/sdk';\\n\\nconst WalletConnectButton = () => {\\n    const [isConnected, setIsConnected] = useState(false);\\n\\n    useEffect(() => {\\n        // Listen for wallet connection status changes\\n        onStatusChange((wallet) => {\\n            setIsConnected(!!wallet);\\n        });\\n    }, []);\\n\\n    const handleConnect = async () => {\\n        await connectWallet();\\n    };\\n\\n    const handleDisconnect = () => {\\n        disconnectWallet();\\n        setIsConnected(false);\\n    };\\n\\n    return (\\n        <button onClick={isConnected ? handleDisconnect : handleConnect}>\\n            {isConnected ? 'Disconnect Wallet' : 'Connect Wallet'}\\n        </button>\\n    );\\n};\\n\\nexport default WalletConnectButton;\",\"// src/App.js\\n\\nimport React from 'react';\\nimport WalletConnectButton from './components/WalletConnectButton';\\n\\nconst App = () => {\\n    return (\\n        <div>\\n            <h1>Welcome to My Crypto App</h1>\\n            <WalletConnectButton />\\n            {/* Other components and content */}\\n        </div>\\n    );\\n};\\n\\nexport default App;\",\"// src/index.js\\n\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport App from './App'; // Import your main App component\\nimport './index.css'; // Optional: Import your CSS file\\nimport Base64 from '@tonconnect/sdk';\\n\\nReactDOM.render(\\n    <React.StrictMode>\\n        <App />  {/* Render your App component here */}\\n    </React.StrictMode>,\\n    document.getElementById('root') // This matches the div in index.html\\n);\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{15:function(e,t,n){},16:function(e,t,n){\"use strict\";n.r(t);var c=n(1),o=n.n(c),a=n(4),l=n.n(a);const r=new(n(2).a);var s=()=>{const[e,t]=Object(c.useState)(!1);Object(c.useEffect)(()=>{(e=>{r.onStatusChange(e)})(e=>{t(!!e)})},[]);return o.a.createElement(\"button\",{onClick:e?()=>{r.disconnect(),console.log(\"Wallet disconnected\"),t(!1)}:async()=>{await(async()=>{const e={universalLink:\"https://app.tonkeeper.com/ton-connect\",bridgeUrl:\"https://bridge.tonapi.io/bridge\"};try{const n=await r.connect(e);return console.log(\"Wallet connected:\",n.account.address),n}catch(t){console.error(\"Failed to connect wallet:\",t)}})()}},e?\"Disconnect Wallet\":\"Connect Wallet\")};var i=()=>o.a.createElement(\"div\",null,o.a.createElement(\"h1\",null,\"Welcome to My Crypto App\"),o.a.createElement(s,null));n(15);l.a.render(o.a.createElement(o.a.StrictMode,null,o.a.createElement(i,null),\"  \"),document.getElementById(\"root\"))},5:function(e,t,n){e.exports=n(16)}},[[5,1,2]]]);","extractedComments":[]}